% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.streg.R
\name{predict.streg}
\alias{predict.streg}
\title{Predict Method for Parametric Proportional Hazards Survival Models}
\usage{
\method{predict}{streg}(object, newdata = NULL, type = "xb", se.fit = FALSE, ...)
}
\arguments{
\item{object}{A fitted \code{\link[=streg]{streg()}} object.}

\item{newdata}{Optionally, a data frame in which to look for variables with which to predict.
If \code{NULL} (the default), predictions will be computed for the data used to fit the model.
In this scenario, passing an \code{\link[=streg]{streg()}} model fitted with the argument \code{x = TRUE} is required.}

\item{type}{The type of prediction required.
The default \code{"xb"} is to return the linear predictor.
Other possible predictions are the hazard function (\code{type = "hazard"}) and the survival function (\code{type = "survival"}).}

\item{se.fit}{Logical switch indicating if standard errors are required.}

\item{...}{Not used.}
}
\value{
If \code{se.fit = FALSE}, a vector with the required predictions.

If \code{se.fit = TRUE} a \code{data.frame} is returned with a column for the predictions (named \code{fit}) and a column for the fitted standard errors (named \code{se.fit}).
}
\description{
Obtain model-based predictions from a parametric proportional hazards survival model fitted by \code{\link[=streg]{streg()}}.
}
\details{
If \code{newdata} is omitted the predictions are based on the data used for the fit.
}
\note{
Standard errors are estimated using the numerical delta method, as implemented in \code{\link[rstpm2:predictnl]{rstpm2::predictnl()}} --- which is equivalent, in principle --- to Stata's \code{predictnl} command.
}
\examples{

library(streg)
data("kva", package = "streg")

# Fit a model
fit <- streg(Surv(failtime, event) ~ load + bearings, data = kva, distribution = "exp", x = TRUE)

# Predict the hazard for each subject
predict(fit, type = "surv")

# Predict the survival probability, including a standard error for the fitted value
predict(fit, type = "surv", se.fit = TRUE)

# Predictions for a new dataset
nd <- data.frame(failtime = 30, event = 1, load = 10, bearings = 3)
predict(fit, newdata = nd, type = "surv")
predict(fit, newdata = nd, type = "surv", se.fit = TRUE)
}
